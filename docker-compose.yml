version: '3.8'

services:
  # Database
  db:
    image: postgres:13-alpine
    container_name: zapateria_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-zapateria}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-zapateria}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - zapateria-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: zapateria_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - zapateria-network

  # Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        NODE_ENV: development
    container_name: zapateria_backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-zapateria}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
    networks:
      - zapateria-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: zapateria_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - zapateria-network
    restart: unless-stopped

  # Admin Dashboard
  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: zapateria_admin
    ports:
      - "3002:3000"
    volumes:
      - ./admin-dashboard:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - zapateria-network
    restart: unless-stopped

networks:
  zapateria-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
